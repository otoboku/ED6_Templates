//--------------------------------------
//--- 010 Editor v3.2 Binary Template
//
// File:
// Author:
// Revision:
// Purpose:
//--------------------------------------

typedef struct
{
    FSkip(4);
    ushort      indexOfLine;
    local int   i;
    for (i = 0; i < 4; ++i)
    {
        ushort slot01_sepith;
    }
    FSkip(0x32);
} Sltget_Slot;

typedef struct
{
    local int i = 0;
    for (i = 0; i < slotCount; i++)
        Sltget_Slot sltget_slot;

    // 计算EPMax：所有结晶孔升级所需地属性耀晶片数量+50。
    local int EPMax = 0x32;
    for (i = 0; i < slotCount; i++)
    {
        EPMax += this.sltget_slot[i].slot01_sepith[0];
    }
} Sltget_Orb <read=readSltget_Orb>;

string readSltget_Orb(Sltget_Orb &a)
{
    string s;
    SPrintf(s, "EPMax=%d", a.EPMax);
    return  s;
}

typedef struct
{
    local int   slotCount = 6;
    local uint  addrThis = FTell();

    local int   i = 0;
    local int   characterTotalNum = 8 ;
/*
    if (ReadUShort(ReadUShort(addrThis) + addrThis - 2) == 0xFFFF)
    {
        while(1)
        {
            if (ReadUShort(FTell()) ==  0xFFFF)
                break;
            characterTotalNum++;
            FSkip(2);
        }
    }
    else
    {
        characterTotalNum = ReadUShort(addrThis) / 2;
    }
    FSeek(addrThis);
*/
    ushort      addr[characterTotalNum];

    for(i = 0; i < characterTotalNum; i++)
    {
        FSeek(addrThis + addr[i]);
        Sltget_Orb  sltget_orb;
    }

} T_sltget <read=readT_sltget, size=8>;

wstring readT_sltget(T_sltget &a)
{
    if (IsProcess() || startof(a) != 0)
    {
        return L"结晶孔强化&EPMax设定";
    }
    string s;
    SPrintf(s, "结晶孔强化&EPMax设定 %d人", a.characterTotalNum);
    return StringToWString(s, CHARSET_UTF8);
}

if (!IsProcess() && FTell() == 0)
{
    T_sltget    sltgetTable <open=true>;
}
